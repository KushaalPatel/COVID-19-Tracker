{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19_logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","options","title","display","text","scales","xAxes","type","maintainAspectRatio","barChart","legend","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b32635b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3ZnK7\",\"card\":\"Cards_card__3P6rZ\",\"infected\":\"Cards_infected__26jO7\",\"recovered\":\"Cards_recovered__2TRE6\",\"deaths\":\"Cards_deaths__2019q\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading ...';\r\n    }\r\n\r\n    return (\r\n        <div className={StylesProvider.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={confirmed.value} duration={1.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={recovered.value} duration={2.2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={deaths.value} duration={2.9} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color =\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl= `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async ()=> {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};","import React, {useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const[dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n         ? (\r\n         <Line \r\n            data = {{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [\r\n                    {data: dailyData.map(({confirmed})=>confirmed), label: 'Infected', borderColor: '#3333bb', backgroundColor: 'rgba(0,5,255,0.1)', fill: true},\r\n                    {data: dailyData.map(({deaths})=>deaths), label: 'Deaths', borderColor: 'red', backgroundColor: 'rgba(255,0,0,0.5)', fill: true},\r\n                ],\r\n            }}\r\n            options = {{\r\n            title: {display: true, text: \"Current Global State\" },\r\n            scales: {xAxes: [{type: 'time'}]},\r\n            maintainAspectRatio: false \r\n          }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current State in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    return (\r\n        <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    \r\n    return (\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange = {(e)=>handleCountryChange(e.target.value)}>\r\n                <option value = \"\">Global</option>\r\n                {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/covid19_logo.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data:fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image}src={coronaImage} alt=\"COVID 19\"/>\r\n                <Cards data= {data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1IDYO\",\"image\":\"App_image__2Bdpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2OWyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3teay\"};","module.exports = __webpack_public_path__ + \"static/media/covid19_logo.6ce9074d.png\";"],"sourceRoot":""}